labs(x="Earned Run Average", y="Count")
describe(mlb_df$FIP)
ggplot(mlb_df, aes(x=FIP)) + geom_histogram(bins=15,
col="blue",
fill="orange") + labs(title="Histogram for Fielding Independent Pitching") +
labs(x="FIP", y="Count")
ggplot(mlb_df, aes(x=FIP, y=W))+
geom_point()
ggplot(mlb_df, aes(x=ERA, y=W))+
geom_point()
cor(mlb_df$W, mlb_df$FIP)
cor(mlb_df$W, mlb_df$ERA)
p1 <- lm(W ~ FIP, data = mlb_df)
summary(p1)
Mets_FIP_Intercept = 140.2366
Mets_FIP_Slope = -13.8506
Mets_FIP = 3.97
Mets_FIP_Wins = Mets_FIP_Intercept + (Mets_FIP_Slope *Mets_FIP)
Mets_FIP_Wins
plot(mlb_df$W ~ mlb_df$FIP)
abline(p1)
plot(p1$residuals ~ mlb_df$FIP)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p1$residuals)
qqnorm(p1$residuals)
qqline(p1$residuals)
p2 <- lm(W ~ ERA, data = mlb_df)
summary(p2)
Mets_ERA_Intercept = 137.8924
Mets_ERA_Slope = -13.8506
Mets_ERA = 4.07
Mets_ERA_Wins = Mets_ERA_Intercept + (Mets_ERA_Slope *Mets_ERA)
Mets_ERA_Wins
plot(mlb_df$W ~ mlb_df$ERA)
abline(p2)
plot(p2$residuals ~ mlb_df$ERA)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p2$residuals)
qqnorm(p2$residuals)
qqline(p2$residuals)
pitch_full <- lm(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
summary(pitch_full)
library(olsrr)
ols_regress(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
library(olsrr)
ols_regress(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
ols_plot_resid_fit(pitch_full)
ols_plot_resid_fit_spread(pitch_full)
ols_step_both_p(pitch_full)
ols_step_backward_aic(pitch_full)
k <- ols_step_backward_aic(pitch_full)
plot(k)
l <- ols_step_forward_aic(pitch_full)
plot(l)
ols_step_best_subset(pitch_full)
mlb_df[mlb_df$W >= 81, "Record"] <- "At or Above .500"
mlb_df[mlb_df$W < 81, "Record"] <- "Below .500"
mlb_df$Record <- as.factor(mlb_df$Record)
knitr::opts_chunk$set(echo = TRUE)
#import the required libraries
library(dplyr)
library(httr)
library(jsonlite)
library(tidyverse)
library(rvest)
library(stringr)
library(rebus)
library(tm)
library(wordcloud)
library(viridisLite)
library(ggplot2)
library(stringr)
library(lubridate)
library(GENEAread)
library(Hmisc)
library(scales)
theme_update(plot.title = element_text(hjust = 0.5))
mlb_df <- read.csv('DATA/MLB_PITCHING_STATS_1998_to_2017.csv')
dim(mlb_df)
ggplot(mlb_df, aes(x=W)) + geom_histogram(bins=20,
col="blue",
fill="orange") + labs(title="Histogram for Wins", align="center") +
labs(x="Wins", y="Count")
one_hundred_wins <- nrow(mlb_df[mlb_df$W >= 100,])
one_hundred_wins
one_hundred_wins / nrow(mlb_df)
mlb_df[mlb_df$W >= 81, "Record"] <- "At or Above .500"
mlb_df[mlb_df$W < 81, "Record"] <- "Below .500"
mlb_df$Record <- as.factor(mlb_df$Record)
mlb_df$League <- case_when(mlb_df$Team == 'Braves'~'National League',
mlb_df$Team == 'Marlins'~'National League',
mlb_df$Team == 'Mets'~'National League',
mlb_df$Team == 'Phillies'~'National League',
mlb_df$Team == 'Nationals'~'National League',
mlb_df$Team == 'Cubs'~'National League',
mlb_df$Team == 'Reds'~'National League',
mlb_df$Team == 'Brewers'~'National League',
mlb_df$Team == 'Pirates'~'National League',
mlb_df$Team == 'Cardinals'~'National League',
mlb_df$Team == 'iamondbacks'~'National League',
mlb_df$Team == 'Rockies'~'National League',
mlb_df$Team == 'Dodgers'~'National League',
mlb_df$Team == 'Padres'~'National League',
mlb_df$Team == 'Giants'~'National League',
TRUE ~ as.character('American League'))
rows <- as.numeric(row.names.data.frame(mlb_df[mlb_df$Team == 'Astros',]))
rows <- rows[rows < 480]
mlb_df$League[ rows] <- "National League"
mlb_df$League <- as.factor(mlb_df$League)
head(mlb_df[mlb_df$Team == 'Astros', ],5)
tail(mlb_df[mlb_df$Team == 'Astros', ],5)
describe(mlb_df$ERA)
ggplot(mlb_df, aes(x=ERA)) + geom_histogram(bins=20,
col="white",
fill="red") + labs(title="Histogram for ERA") +
labs(x="Earned Run Average", y="Count")
describe(mlb_df$FIP)
ggplot(mlb_df, aes(x=FIP)) + geom_histogram(bins=15,
col="blue",
fill="orange") + labs(title="Histogram for Fielding Independent Pitching") +
labs(x="FIP", y="Count")
ggplot(mlb_df, aes(x=FIP, y=W))+
geom_point()
ggplot(mlb_df, aes(x=ERA, y=W))+
geom_point()
cor(mlb_df$W, mlb_df$FIP)
cor(mlb_df$W, mlb_df$ERA)
p1 <- lm(W ~ FIP, data = mlb_df)
summary(p1)
Mets_FIP_Intercept = 140.2366
Mets_FIP_Slope = -13.8506
Mets_FIP = 3.97
Mets_FIP_Wins = Mets_FIP_Intercept + (Mets_FIP_Slope *Mets_FIP)
Mets_FIP_Wins
plot(mlb_df$W ~ mlb_df$FIP)
abline(p1)
plot(p1$residuals ~ mlb_df$FIP)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p1$residuals)
qqnorm(p1$residuals)
qqline(p1$residuals)
p2 <- lm(W ~ ERA, data = mlb_df)
summary(p2)
Mets_ERA_Intercept = 137.8924
Mets_ERA_Slope = -13.8506
Mets_ERA = 4.07
Mets_ERA_Wins = Mets_ERA_Intercept + (Mets_ERA_Slope *Mets_ERA)
Mets_ERA_Wins
plot(mlb_df$W ~ mlb_df$ERA)
abline(p2)
plot(p2$residuals ~ mlb_df$ERA)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p2$residuals)
qqnorm(p2$residuals)
qqline(p2$residuals)
pitch_full <- lm(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
summary(pitch_full)
library(olsrr)
ols_regress(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
ols_plot_resid_fit(pitch_full)
ols_plot_resid_fit_spread(pitch_full)
ols_step_both_p(pitch_full)
ols_step_backward_aic(pitch_full)
k <- ols_step_backward_aic(pitch_full)
plot(k)
l <- ols_step_forward_aic(pitch_full)
plot(l)
knitr::opts_chunk$set(echo = TRUE)
#import the required libraries
library(dplyr)
library(httr)
library(jsonlite)
library(tidyverse)
library(rvest)
library(stringr)
library(rebus)
library(tm)
library(wordcloud)
library(viridisLite)
library(ggplot2)
library(stringr)
library(lubridate)
library(GENEAread)
library(Hmisc)
library(scales)
theme_update(plot.title = element_text(hjust = 0.5))
mlb_df <- read.csv('DATA/MLB_PITCHING_STATS_1998_to_2017.csv')
dim(mlb_df)
ggplot(mlb_df, aes(x=W)) + geom_histogram(bins=20,
col="blue",
fill="orange") + labs(title="Histogram for Wins", align="center") +
labs(x="Wins", y="Count")
one_hundred_wins <- nrow(mlb_df[mlb_df$W >= 100,])
one_hundred_wins
one_hundred_wins / nrow(mlb_df)
mlb_df[mlb_df$W >= 81, "Record"] <- "At or Above .500"
mlb_df[mlb_df$W < 81, "Record"] <- "Below .500"
mlb_df$Record <- as.factor(mlb_df$Record)
mlb_df$League <- case_when(mlb_df$Team == 'Braves'~'National League',
mlb_df$Team == 'Marlins'~'National League',
mlb_df$Team == 'Mets'~'National League',
mlb_df$Team == 'Phillies'~'National League',
mlb_df$Team == 'Nationals'~'National League',
mlb_df$Team == 'Cubs'~'National League',
mlb_df$Team == 'Reds'~'National League',
mlb_df$Team == 'Brewers'~'National League',
mlb_df$Team == 'Pirates'~'National League',
mlb_df$Team == 'Cardinals'~'National League',
mlb_df$Team == 'iamondbacks'~'National League',
mlb_df$Team == 'Rockies'~'National League',
mlb_df$Team == 'Dodgers'~'National League',
mlb_df$Team == 'Padres'~'National League',
mlb_df$Team == 'Giants'~'National League',
TRUE ~ as.character('American League'))
rows <- as.numeric(row.names.data.frame(mlb_df[mlb_df$Team == 'Astros',]))
rows <- rows[rows < 480]
mlb_df$League[ rows] <- "National League"
mlb_df$League <- as.factor(mlb_df$League)
head(mlb_df[mlb_df$Team == 'Astros', ],5)
tail(mlb_df[mlb_df$Team == 'Astros', ],5)
describe(mlb_df$ERA)
ggplot(mlb_df, aes(x=ERA)) + geom_histogram(bins=20,
col="white",
fill="red") + labs(title="Histogram for ERA") +
labs(x="Earned Run Average", y="Count")
describe(mlb_df$FIP)
ggplot(mlb_df, aes(x=FIP)) + geom_histogram(bins=15,
col="blue",
fill="orange") + labs(title="Histogram for Fielding Independent Pitching") +
labs(x="FIP", y="Count")
ggplot(mlb_df, aes(x=FIP, y=W))+
geom_point()
ggplot(mlb_df, aes(x=ERA, y=W))+
geom_point()
cor(mlb_df$W, mlb_df$FIP)
cor(mlb_df$W, mlb_df$ERA)
p1 <- lm(W ~ FIP, data = mlb_df)
summary(p1)
Mets_FIP_Intercept = 140.2366
Mets_FIP_Slope = -13.8506
Mets_FIP = 3.97
Mets_FIP_Wins = Mets_FIP_Intercept + (Mets_FIP_Slope *Mets_FIP)
Mets_FIP_Wins
plot(mlb_df$W ~ mlb_df$FIP)
abline(p1)
plot(p1$residuals ~ mlb_df$FIP)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p1$residuals)
qqnorm(p1$residuals)
qqline(p1$residuals)
p2 <- lm(W ~ ERA, data = mlb_df)
summary(p2)
Mets_ERA_Intercept = 137.8924
Mets_ERA_Slope = -13.8506
Mets_ERA = 4.07
Mets_ERA_Wins = Mets_ERA_Intercept + (Mets_ERA_Slope *Mets_ERA)
Mets_ERA_Wins
plot(mlb_df$W ~ mlb_df$ERA)
abline(p2)
plot(p2$residuals ~ mlb_df$ERA)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p2$residuals)
qqnorm(p2$residuals)
qqline(p2$residuals)
pitch_full <- lm(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
summary(pitch_full)
library(olsrr)
ols_regress(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
ols_plot_resid_fit(pitch_full)
ols_plot_resid_fit_spread(pitch_full)
ols_step_both_p(pitch_full)
ols_step_backward_aic(pitch_full)
k <- ols_step_backward_aic(pitch_full)
plot(k)
l <- ols_step_forward_aic(pitch_full)
plot(l)
mlb_df$Record
plot(mlb_df$Record)
ggplot(mlb_df, aes(x=Record)) + geom_histogram( col="blue", fill="orange") + labs(title="Histogram for Record") +
labs(x="Record", y="Count")
plot(mlb_df$Record)
ggplot(mlb_df, aes(x=Record)) +  labs(title="Histogram for Record") +
labs(x="FIP", y="Count")
ggplot(mlb_df, aes(x=Record)) + geom_bar() + labs(title="Histogram for Record") +
labs(x="Record", y="Count")
ggplot(mlb_df, aes(x=Record)) + geom_bar(color="Green") + labs(title="Histogram for Record") +
labs(x="Record", y="Count")
ggplot(mlb_df, aes(x=Record)) + geom_bar(color="Green", fill="yellow") + labs(title="Histogram for Record") +
labs(x="Record", y="Count")
help(family)
# Logistic Regression
# where F is a binary factor and
# x1-x3 are continuous predictors
record <- glm(Record~ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df, family=binomial())
summary(record) # display results
1- (370.42/831.45)
pitch_full_best <- lm(W ~ FIP + RAR, data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct, data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 , data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 + BABIP, data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 + BABIP + H, data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 + BABIP + H + Hper9 + BBper9 + FIP + HRper9 + BABIP + ERA , data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 +  H + Hper9 + BBper9 + FIP + HRper9 + BABIP + ERA , data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ FIP + RAR + LOB_pct + KsPer9 +  H + Hper9 + BBper9 + FIP + HRper9 + ERA , data = mlb_df)
summary(pitch_full_best)
pitch_full_best <- lm(W ~ RAR+LOB_pct+BABIP+H+Hper9+BBper9+FIP+HRper9+ERA  , data = mlb_df)
summary(pitch_full_best)
qqnorm(pitch_full_best$residuals, main="Normal Q-Q Plot for Pitching Best Model ")
qqline(pitch_full_best$residuals)
plot(abs(pitch_full_best$residuals) ~ pitch_full_best$fitted.values, main="Variability of Residuals for Pitching Best Model")
plot(p2$residuals ~ mlb_df$ERA)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p2$residuals)
hist(pitch_full_best$residuals)
#import the required libraries
library(stringr)
library(rebus)
library(tm)
library(viridisLite)
library(ggplot2)
library(GENEAread)
library(Hmisc)
library(scales)
theme_update(plot.title = element_text(hjust = 0.5))
mlb_df <- read.csv('DATA/MLB_PITCHING_STATS_1998_to_2017.csv')
dim(mlb_df)
ggplot(mlb_df, aes(x=W)) + geom_histogram(bins=20,
col="blue",
fill="orange") + labs(title="Histogram for Wins", align="center") +
labs(x="Wins", y="Count")
one_hundred_wins <- nrow(mlb_df[mlb_df$W >= 100,])
one_hundred_wins
one_hundred_wins / nrow(mlb_df)
knitr::opts_chunk$set(echo = TRUE)
#import the required libraries
library(stringr)
library(rebus)
library(tm)
library(viridisLite)
library(ggplot2)
library(GENEAread)
library(Hmisc)
library(scales)
theme_update(plot.title = element_text(hjust = 0.5))
mlb_df <- read.csv('DATA/MLB_PITCHING_STATS_1998_to_2017.csv')
dim(mlb_df)
ggplot(mlb_df, aes(x=W)) + geom_histogram(bins=20,
col="blue",
fill="orange") + labs(title="Histogram for Wins", align="center") +
labs(x="Wins", y="Count")
one_hundred_wins <- nrow(mlb_df[mlb_df$W >= 100,])
one_hundred_wins
one_hundred_wins / nrow(mlb_df)
mlb_df[mlb_df$W >= 81, "Record"] <- "At or Above .500"
mlb_df[mlb_df$W < 81, "Record"] <- "Below .500"
mlb_df$Record <- as.factor(mlb_df$Record)
mlb_df$League <- case_when(mlb_df$Team == 'Braves'~'National League',
mlb_df$Team == 'Marlins'~'National League',
mlb_df$Team == 'Mets'~'National League',
mlb_df$Team == 'Phillies'~'National League',
mlb_df$Team == 'Nationals'~'National League',
mlb_df$Team == 'Cubs'~'National League',
mlb_df$Team == 'Reds'~'National League',
mlb_df$Team == 'Brewers'~'National League',
mlb_df$Team == 'Pirates'~'National League',
mlb_df$Team == 'Cardinals'~'National League',
mlb_df$Team == 'iamondbacks'~'National League',
mlb_df$Team == 'Rockies'~'National League',
mlb_df$Team == 'Dodgers'~'National League',
mlb_df$Team == 'Padres'~'National League',
mlb_df$Team == 'Giants'~'National League',
TRUE ~ as.character('American League'))
rows <- as.numeric(row.names.data.frame(mlb_df[mlb_df$Team == 'Astros',]))
rows <- rows[rows < 480]
mlb_df$League[ rows] <- "National League"
mlb_df$League <- as.factor(mlb_df$League)
head(mlb_df[mlb_df$Team == 'Astros', ],5)
tail(mlb_df[mlb_df$Team == 'Astros', ],5)
describe(mlb_df$ERA)
ggplot(mlb_df, aes(x=ERA)) + geom_histogram(bins=20,
col="white",
fill="red") + labs(title="Histogram for ERA") +
labs(x="Earned Run Average", y="Count")
describe(mlb_df$FIP)
ggplot(mlb_df, aes(x=FIP)) + geom_histogram(bins=15,
col="blue",
fill="orange") + labs(title="Histogram for Fielding Independent Pitching") +
labs(x="FIP", y="Count")
ggplot(mlb_df, aes(x=FIP, y=W))+
geom_point()
ggplot(mlb_df, aes(x=ERA, y=W))+
geom_point()
cor(mlb_df$W, mlb_df$FIP)
cor(mlb_df$W, mlb_df$ERA)
p1 <- lm(W ~ FIP, data = mlb_df)
summary(p1)
Mets_FIP_Intercept = 140.2366
Mets_FIP_Slope = -13.8506
Mets_FIP = 3.97
Mets_FIP_Wins = Mets_FIP_Intercept + (Mets_FIP_Slope *Mets_FIP)
Mets_FIP_Wins
plot(mlb_df$W ~ mlb_df$FIP)
abline(p1)
plot(p1$residuals ~ mlb_df$FIP)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p1$residuals)
qqnorm(p1$residuals)
qqline(p1$residuals)
p2 <- lm(W ~ ERA, data = mlb_df)
summary(p2)
Mets_ERA_Intercept = 137.8924
Mets_ERA_Slope = -13.8506
Mets_ERA = 4.07
Mets_ERA_Wins = Mets_ERA_Intercept + (Mets_ERA_Slope *Mets_ERA)
Mets_ERA_Wins
plot(mlb_df$W ~ mlb_df$ERA)
abline(p2)
plot(p2$residuals ~ mlb_df$ERA)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(p2$residuals)
qqnorm(p2$residuals)
qqline(p2$residuals)
pitch_full <- lm(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df)
summary(pitch_full)
pitch_full_best <- lm(W ~ RAR+LOB_pct+BABIP+H+Hper9+BBper9+FIP+HRper9+ERA  , data = mlb_df)
summary(pitch_full_best)
qqnorm(pitch_full_best$residuals, main="Normal Q-Q Plot for Pitching Best Model ")
qqline(pitch_full_best$residuals)
plot(abs(pitch_full_best$residuals) ~ pitch_full_best$fitted.values, main="Variability of Residuals for Pitching Best Model")
hist(pitch_full_best$residuals)
ggplot(mlb_df, aes(x=Record)) + geom_bar(color="Green", fill="yellow") + labs(title="Histogram for Record") +
labs(x="Record", y="Count")
# Logistic Regression
# where F is a binary factor and
# x1-x3 are continuous predictors
record <- glm(Record~ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_df, family=binomial())
summary(record) # display results
1- (370.42/831.45)
mlb_AL <- mlb_df[mlb_df$League == 'American League',]
glimpse(mlb_AL)
AL_full <- lm(W ~  ERA + H + R + ER + HR + BB + SO + KsPer9 + BBper9 + KperBB + Hper9 + HRper9 +
AVG + WHIP + BABIP + LOB_pct + FIP + RAR + K_pct + BB_pct, data = mlb_AL)
summary(AL_full)
AL_full <- lm(W ~ RAR+LOB_pct+BABIP+H+Hper9+BBper9+FIP+HRper9+ERA, data = mlb_AL)
summary(AL_full)
mlb_NL <- mlb_df[mlb_df$League == 'National League',]
glimpse(mlb_NL)
NL_full <- lm(W ~ RAR+LOB_pct+BABIP+H+Hper9+BBper9+FIP+HRper9+ERA, data = mlb_NL)
summary(NL_full)
setwd('C:/Users/jkhan/Documents/GitHub/DATA-607-Data-Acquisition-and-Management/Final Project/Final')
getwd()
knitr::opts_chunk$set(echo = TRUE)
ggplot(data=Movies, aes(x=Genre))
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(dplyr)
library(tidyr)
library(viridisLite)
library(ggplot2)
library(stringr)
library(lubridate)
library(GENEAread)
library(boxoffice)
library(XML)
library(jsonlite)
library(data.table)
url <- 'https://www.the-numbers.com/market/2018/top-grossing-movies'
movies<- url  %>%
read_html() %>%
html_nodes(xpath = '//*[@id="page_filling_chart"]/table') %>%
html_table(fill = TRUE)
movies <- movies[[1]]
movies_df<- as.data.frame(movies)
movies_df[movies_df$Movie == "RBG",]
NYTimes_KEY <- "3f11a8ef5cf94222beda574c715815e8"
baseURL = paste0("https://api.nytimes.com/svc/movies/v2/reviews/search.json?api-key=", NYTimes_KEY, sep="")
#Create an empty list called pages
pages <- list()
#create a for loop which makes 1000 calls to the API
for(i in seq(0,1000,2)){
NY_TIMES_CRITICS <- fromJSON(paste0(baseURL, "&offset=", i))
#Add the results of the calls to the pages list
pages[[i+1]] <- NY_TIMES_CRITICS$results
}
NY_TIMES_CRITICS_df <- rbind_pages(pages)
dim(NY_TIMES_CRITICS_df)
NY_TIMES_CRITICS_df <- NY_TIMES_CRITICS_df[!duplicated(NY_TIMES_CRITICS_df$link$url), ]
NY_TIMES_CRITICS_df$link
Body <- list()
X_path = '//*[contains(concat( " ", @class, " " ), concat( " ", "css-1572rug", " " ))]'
for (i in seq(1,1017)){
getContent <- read_html(NY_TIMES_CRITICS_df$link$url[i])
articles <- html_nodes(getContent, xpath = X_path )
Body[i] <- list(html_text(articles))
}
